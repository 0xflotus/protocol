// This Source Code Form is subject to the terms of the Mozilla Public
// License, v. 2.0. If a copy of the MPL was not distributed with this
// file, You can obtain one at http://mozilla.org/MPL/2.0/.

@import '../includes/lib';

$v-grid-xs: $layout-xs;
$h-grid-xs: $layout-lg; // should match mzp-l-content values

$v-grid-lg: $layout-lg;
$h-grid-lg: $layout-xl; // should match mzp-l-content values

.mzp-c-block {
    position: relative;
    overflow-x: hidden;

    &.mzp-has-pop {
        padding: ($v-grid-xs * 2) 0;
    }

    &:before {
        content: '';
        background-color: #000;
        position: absolute;
        top: $v-grid-xs * 2;
        bottom: $v-grid-xs * 2;
        left: 0;
        right: 0;
    }

    @media #{$mq-lg} {

        &.mzp-has-pop {
            padding: ($v-grid-lg * 2) 0;
        }

        &:before {
            content: '';
            background-color: #000;
            position: absolute;
            top: $v-grid-lg * 2;
            bottom: $v-grid-lg * 2;
            left: 0;
            right: 0;
        }
    }
}

.mzp-c-block-container {
    @include clearfix();
    @include border-box;
    margin: 0 auto;
    max-width: $content-max;
    min-width: $content-xs;
    padding: $v-grid-xs $h-grid-xs;

    .mzp-l-h-start {
        justify-self: start;
        @include bidi(((text-align, left, right),));

        .mzp-c-block-media-img {
            margin: 0 auto 0 0;
        }
    }

    .mzp-l-h-center {
        justify-self: center;
        text-align: center;

        .mzp-c-block-media-img {
            margin: 0 auto;
        }
    }

    .mzp-l-h-end {
        @include bidi(((text-align, right, left),));
        justify-self: end;

        .mzp-c-block-media-img {
            margin: 0 0 0 auto;
        }
    }

    .mzp-l-v-start {
        align-self: start;
    }

    .mzp-l-v-center {
        align-self: center;
    }

    .mzp-l-v-end {
        align-self: end;
    }

    @media #{$mq-lg} {
        padding: $v-grid-lg ($h-grid-lg / 2);
    }
}

.mzp-c-block-body {
    position: relative;

    @media all and (max-width: #{$screen-lg - 1}) {
        &:first-child {
            margin-bottom: $v-grid-xs;
        }

        &:last-child {
            margin-top: $v-grid-xs;
        }

        .mzp-has-media-hide & {
            margin-top: 0;
            margin-bottom: 0;
        }
    }

    @media #{$mq-lg} {
        @include border-box;
        @include bidi(((float, left, right),));
        width: 50%;
        padding: 0 ($h-grid-lg / 2);

        > *:first-child {
            margin-top: 0;
        }

        > *:last-child {
            margin-bottom: 0;
        }

        .mzp-l-block-body-33 & {
            width: 33.33%;
        }

        .mzp-l-block-body-66 & {
            width: 66.66%;
        }

        .mzp-l-reversed & {
            @include bidi(((float, right, left),));
        }
    }
}


.mzp-c-block-media {
    position: relative;

    @media all and (max-width:#{$screen-lg - 1}) {
        .mzp-has-media-hide & {
            display: none;
        }
    }

    @media #{$mq-lg} {
        @include border-box;
        @include bidi(((float, right, left),));
        width: 50%;
        padding: 0 ($h-grid-lg / 2);


        .mzp-l-block-body-33 & {
            width: 66.66%;
        }

        .mzp-l-block-body-66 & {
            width: 33.33%;
        }

        .mzp-l-reversed & {
            @include bidi(((float, left, right),));
        }
    }

    // padding
    @media all and (max-width:767px) {
        &.mzp-l-fit-flush {
            margin: #{$v-grid-xs * -1} #{$h-grid-xs * -1};

            &:first-child {
                margin-bottom: 0;
            }

            &:last-child {
                margin-top: 0;
            }
        }

        &.mzp-l-fit-flush-top {
            margin-top: $v-grid-xs * -1;

            &:last-child {
                margin-top: 0;
            }
        }

        &.mzp-l-fit-flush-side {
            margin-right: $h-grid-xs * -1;
            margin-left: $h-grid-xs * -1;
        }

        &.mzp-l-fit-flush-bottom {
            margin-bottom: $v-grid-xs * -1;

            &:first-child {
                margin-bottom: 0;
            }
        }

        &.mzp-l-fit-pop {
            margin: ($v-grid-xs * 2 * -1) ($h-grid-xs * 2 * -1);

            &:first-child {
                margin-bottom: 0;
            }

            &:last-child {
                margin-top: 0;
            }
        }

        &.mzp-l-fit-pop-top {
            margin-top: $v-grid-xs * 2 * -1;

            &:last-child {
                margin-top: 0;
            }
        }

        &.mzp-l-fit-pop-side {
            margin-right: $h-grid-xs * 2 * -1;
            margin-left: $h-grid-xs * 2 * -1;
        }

        &.mzp-l-fit-pop-bottom {
            margin-bottom: $v-grid-xs * 2 * -1;

            &:first-child {
                margin-bottom: 0;
            }
        }
    }

    @media #{$mq-lg} {
        &.mzp-l-fit-flush,
        &.mzp-l-fit-flush-top {
            margin-top: $v-grid-lg * -1;
        }

        &.mzp-l-fit-flush,
        &.mzp-l-fit-flush-side {
            [dir='ltr'] :not(.mzp-l-reversed) > &,
            [dir='rtl'] .mzp-l-reversed > & {
                margin-right: $h-grid-lg * -1;
            }

            [dir='rtl'] :not(.mzp-l-reversed) > &,
            .mzp-l-reversed & {
                margin-left: $h-grid-lg * -1;
            }
        }

        &.mzp-l-fit-flush,
        &.mzp-l-fit-flush-bottom {
            margin-bottom: $v-grid-lg * -1;
        }

        &.mzp-l-fit-pop,
        &.mzp-l-fit-pop-top {
            margin-top: $v-grid-lg * 2 * -1;
        }

        &.mzp-l-fit-pop,
        &.mzp-l-fit-pop-side {
            [dir='ltr'] :not(.mzp-l-reversed) > &,
            [dir='rtl'] .mzp-l-reversed > & {
                margin-right: $h-grid-lg * 2 * -1;
            }

            [dir='rtl'] :not(.mzp-l-reversed) > &,
            [dir='ltr'] .mzp-l-reversed & {
                margin-left: $h-grid-lg * 2 * -1;
            }
        }

        &.mzp-l-fit-pop,
        &.mzp-l-fit-pop-bottom {
            margin-bottom: $v-grid-lg * 2 * -1;
        }
    }
}

@supports(display:grid) {

    .mzp-c-block-container  {

        @media #{$mq-lg} {
            padding: $v-grid-lg $h-grid-lg;
        }

        @media #{$mq-lg} {
            // grid is all start/end based we don't need bidi declarations for RTL support \o/
            display: grid;
            grid-template-columns: 1fr 1fr;
            grid-template-areas: "body media";
            grid-column-gap: $h-grid-lg;

            .mzp-l-block-body-33 > & {
                grid-template-columns: 2fr 3fr;
            }

            .mzp-l-block-body-66 > & {
                grid-template-columns: 3fr 2fr;
            }

            .mzp-l-reversed > & {
                grid-template-areas: "media body";
            }

            .mzp-l-block-body-33.mzp-l-reversed > & {
                grid-template-columns: 3fr 2fr;
            }

            .mzp-l-block-body-66.mzp-l-reversed > & {
                grid-template-columns: 2fr 3fr;
            }
        }
    }

    // extra specificitly to over-ride the styles that make the float fall-back work
    .mzp-c-block-container .mzp-c-block-body,
    .mzp-c-block-container .mzp-c-block-media {
        float: none;
        min-width: 0; //because of https://stackoverflow.com/questions/43311943/prevent-content-from-expanding-grid-items
        padding: 0;
        width: auto;
    }

    .mzp-c-block-body {
        grid-area: body;
    }

    .mzp-c-block-media {
        align-self: stretch;
        grid-area: media;

        @media #{$mq-lg} {

            .mzp-c-block-media-img {
                display: block;
                max-width: none;
            }

            .mzp-l-reversed > .mzp-c-block-container > &:not([class*="h-"]) {
                justify-self: end; // how to do this without over riding mzp-l-h-center etc.
            }

            &.mzp-l-constrain-width {

                .mzp-c-block-media-img {
                    max-width: 100%;
                }
            }

            &.mzp-l-constrain-height {

                .mzp-c-block-media-img {
                    bottom: 0;
                    left: 0;
                    max-height: 100%;
                    max-width: none;
                    position: absolute;
                    top: 0;
                    width: auto;

                    [dir='rtl'] &,
                    .mzp-l-reversed & {
                        left: auto;
                        right: 0;
                    }
                }
            }
        }
    }
}
