// This Source Code Form is subject to the terms of the Mozilla Public
// License, v. 2.0. If a copy of the MPL was not distributed with this
// file, You can obtain one at http://mozilla.org/MPL/2.0/.

@import '../includes/lib';

// horizontal spacing should match mzp-l-content's horizontal spacing

// xs
$v-grid-xs: $layout-xs;
$h-grid-xs: $layout-lg;

//md
$v-grid-md: $layout-md;
$h-grid-md: $layout-lg;

//lg
$v-grid-lg: $layout-lg;
$h-grid-lg: $layout-xl;


/* -------------------------------------------------------------------------- */
// Basic vertical alignment

.mzp-c-block {
    overflow-x: hidden;
    padding: $v-grid-xs 0;
    position: relative;

    @media #{$mq-md} {
        padding: $v-grid-md 0;
    }

    @media #{$mq-lg} {
        padding: $v-grid-lg 0;
    }
}

.mzp-c-block-container {
    @include clearfix();
    @include border-box;
    margin: 0 auto;
    max-width: $content-max;
    min-width: $content-xs;
    padding: 0 $layout-xs;

    @media #{$mq-md} {
        padding: 0 $h-grid-md;
    }

    @media #{$mq-lg} {
        padding: 0 $h-grid-lg;
    }

    .mzp-t-dark &,
    .mzp-has-bg {
        @include light-links;
        background-color: #000;
        color: #fff;
    }
}

.mzp-c-block-media-img {
    display: block;
}

.mzp-c-block-body {
    position: relative;

    // vertical spacing between body and media before side by side display kicks in
    @media all and (max-width: #{$screen-lg - 1}) {
        &:first-child {
            margin-bottom: $v-grid-xs;
        }

        &:last-child {
            margin-top: $v-grid-xs;
        }

        .mzp-has-media-hide & {
            margin-top: 0;
            margin-bottom: 0;
        }
    }

    @media all and (min-width: #{$screen-md}) and (max-width: #{$screen-lg - 1}) {
        &:first-child {
            margin-bottom: $v-grid-md;
        }

        &:last-child {
            margin-top: $v-grid-md;
        }

        .mzp-has-media-hide & {
            margin-top: 0;
            margin-bottom: 0;
        }
    }
}

.mzp-c-block-media {
    position: relative;

    @media all and (max-width:#{$screen-lg - 1}) {
        .mzp-has-media-hide & {
            display: none;
        }
    }
}

/* -------------------------------------------------------------------------- */
// side by side layout, float based fall back

@media #{$mq-lg} {
    .mzp-c-block-body {
        @include border-box;
        @include bidi(((float, left, right),));
        width: 50%;
        padding: 0 ($h-grid-lg / 2);

        > *:first-child {
            margin-top: 0;
        }

        > *:last-child {
            margin-bottom: 0;
        }

        .mzp-l-block-body-33 & {
            width: 33.33%;
        }

        .mzp-l-block-body-66 & {
            width: 66.66%;
        }

        .mzp-l-reversed & {
            @include bidi(((float, right, left),));
        }
    }

    .mzp-c-block-media {
        @include border-box;
        @include bidi(((float, right, left),));
        width: 50%;
        padding: 0 ($h-grid-lg / 2);


        .mzp-l-block-body-33 & {
            width: 66.66%;
        }

        .mzp-l-block-body-66 & {
            width: 33.33%;
        }

        .mzp-l-reversed & {
            @include bidi(((float, left, right),));
        }
    }

}

/* -------------------------------------------------------------------------- */
// side by side layout, grid based

@media #{$mq-lg} {
    @supports( display:grid) {
        .mzp-c-block-container {
            // grid is all start/end based we don't need bidi declarations for RTL support \o/
            display: grid;
            grid-template-columns: 1fr 1fr;
            grid-template-areas: "body media";
            grid-column-gap: $h-grid-lg;

            .mzp-l-block-body-33 > & {
                grid-template-columns: 2fr 3fr;
            }

            .mzp-l-block-body-66 > & {
                grid-template-columns: 3fr 2fr;
            }

            .mzp-l-reversed > & {
                grid-template-areas: "media body";
            }

            .mzp-l-block-body-33.mzp-l-reversed > & {
                grid-template-columns: 3fr 2fr;
            }

            .mzp-l-block-body-66.mzp-l-reversed > & {
                grid-template-columns: 2fr 3fr;
            }
        }

        .mzp-c-block-body,
        .mzp-c-block-media {
            .mzp-c-block-container & { // extra specificitly to over-ride the styles that make the float fall-back work
                float: none;
                min-width: 0; //because of https://stackoverflow.com/questions/43311943/prevent-content-from-expanding-grid-items
                padding: 0;
                width: auto;
            }
        }

        .mzp-c-block-body {
            grid-area: body;
        }

        .mzp-c-block-media {
            align-self: stretch;
            grid-area: media;

            .mzp-c-block-media-img {
                display: block;
                max-width: none;
            }
        }
    }
}

/* -------------------------------------------------------------------------- */
// constraints on height or width of media

.mzp-c-block-media {
    @media all and (max-width: #{$screen-lg - 1}) {
        // center image & constrain width
        &.mzp-l-media-constrain-mobile {
            text-align: center;

            .mzp-c-block-media-img {
                margin: 0 auto;
                max-width: $content-sm;
            }
        }
    }

    @media #{$mq-lg} {
        @supports ( display:grid ) {
            &.mzp-l-media-constrain-width {
                .mzp-c-block-media-img {
                    max-width: 100%;
                }
            }

            &.mzp-l-media-constrain-height {
                height: 100%;
                justify-self: auto !important; /* stylelint-disable-line declaration-no-important */

                .mzp-c-block-media-img {
                    bottom: 0;
                    left: 0;
                    max-height: 100%;
                    max-width: auto;
                    position: absolute;
                    top: 0;
                    width: auto;

                    [dir='rtl'] &,
                    .mzp-l-reversed & {
                        left: auto;
                        right: 0;
                    }
                }
            }
        }
    }
}

/* --------------------------------------------------------------------------- */
// vertical spacing for body or media


.mzp-t-dark,
.mzp-has-bg {
    .mzp-c-block-body {
        // vertical spacing between text and edges when there's a bg-color
        @media all and (max-width: #{$screen-lg - 1}) {
            &:first-child {
                padding-top: $v-grid-xs;
            }

            &:last-child {
                padding-bottom: $v-grid-xs;
            }

            @at-root #{selector-append(".mzp-has-media-hide", &)} {
                padding-top: $v-grid-xs;
                padding-bottom: $v-grid-xs;
            }
        }

        @media all and (min-width: #{$screen-md}) and (max-width: #{$screen-lg - 1}) {
            &:first-child {
                padding-top: $v-grid-md;
            }

            &:last-child {
                padding-bottom: $v-grid-md;
            }

            @at-root #{selector-append(".mzp-has-media-hide", &)} {
                padding-top: $v-grid-md;
                padding-bottom: $v-grid-md;
            }
        }
    }
}

@media #{$mq-lg} {
    @supports(display:grid) {
        .mzp-t-dark,
        .mzp-has-bg {
            .mzp-c-block-body {
                padding: $v-grid-lg 0;
            }
        }

        .mzp-l-v-pad {
            &.mzp-c-block-body,
            &.mzp-c-block-media {
                padding: $v-grid-lg 0;
            }
        }

        .mzp-l-pop-top,
        .mzp-l-pop {
            &.mzp-c-block {
                padding-top: $v-grid-lg * 2;
            }
            .mzp-c-block-media {
                margin-top: $v-grid-lg * -1;
            }
        }
        .mzp-l-pop-bottom,
        .mzp-l-pop {
            &.mzp-c-block {
                padding-bottom: $v-grid-lg * 2;
            }
            .mzp-c-block-media {
                margin-bottom: $v-grid-lg * -1;
            }
        }
    }
}

/* --------------------------------------------------------------------------- */
// vertical and horizontal aligment for body or media
// text align works for float fallback
// justify positioning works for no constraint or width constraint
// absolute positioning works on constrain-height

.mzp-c-block-container {
    .mzp-l-h-start {
        @include bidi(((text-align, left, right),));
        justify-self: start;

        .mzp-c-block-media-img {
            @include bidi((
                (margin-right, auto, margin-left, 0),
                (margin-left, 0, margin-right, 0),
            ));
        }
    }

    .mzp-l-h-center {
        justify-self: center;
        text-align: center;

        .mzp-c-block-media-img {
            margin: 0 auto;
        }

        @media #{$mq-lg} {
            @supports(display:grid) {
                &.mzp-l-media-constrain-height .mzp-c-block-media-img {
                    left: 50%;
                    transform: translateX(-50%);
                }
            }
        }
    }

    .mzp-l-h-end {
        @include bidi(((text-align, right, left),));
        justify-self: end;

        .mzp-c-block-media-img {
            @include bidi((
                (margin-left, auto, margin-right, 0),
                (margin-right, 0, margin-left, 0),
            ));
        }

        @media #{$mq-lg} {
            @supports(display:grid) {
                &.mzp-l-media-constrain-height .mzp-c-block-media-img {
                    right: 0;
                    left: auto;
                }
            }
        }
    }

    // vertical alignment only after grid starts
    @media #{$mq-lg} {
        @supports(display:grid) {

            .mzp-l-v-start {
                align-self: start;
            }

            .mzp-l-v-center {
                align-self: center;

                &.mzp-l-media-constrain-height .mzp-c-block-media-img {
                    top: 50%;
                    transform: translateY(-50%);
                }

                &.mzp-l-h-center.mzp-l-media-constrain-height .mzp-c-block-media-img {
                    transform: translateY(-50%) translateX(-50%);
                }
            }

            .mzp-l-v-end {
                align-self: end;

                &.mzp-l-media-constrain-height .mzp-c-block-media-img {
                    top: auto;
                }
            }
        }
    }
}
